name: ${project_name}
services:

  make:
    image: ${project_name}-make:${MD5_MAKE}
    build:
      context: ./dev/docker/make
      dockerfile: Dockerfile
    volumes:
      - ${HOST_PROJECT_PATH}:/app

  keystone:
    image: ${project_name}-nodejs:${MD5_NODEJS}
    build:
      context: ./dev/docker/nodejs
      dockerfile: Dockerfile
    volumes:
      - ${HOST_PROJECT_PATH}:/app
      - ${HOST_PROJECT_PATH}/.npm-cache:/var/npm-cache
    environment:
      - HOST=0.0.0.0
    ports:
      - "${keystone_port}:3000"
    command:
      - "/app/dev/scripts/run-keystone-project.sh"
    depends_on:
      - postgres

  astro:
    image: ${project_name}-nodejs:${MD5_NODEJS}
    build:
      context: ./dev/docker/nodejs
      dockerfile: Dockerfile
    volumes:
      - ${HOST_PROJECT_PATH}:/app
      - ${HOST_PROJECT_PATH}/.npm-cache:/var/npm-cache
    environment:
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING
    ports:
      - "${astro_port}:4321"
    command:
      - "/app/dev/scripts/run-astro-project.sh"
    depends_on:
      - keystone

  postgres:
    image: ${project_name}-postgres:${MD5_POSTGRES}
    build:
      context: ./dev/docker/postgres
      dockerfile: Dockerfile
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - ${HOST_PROJECT_PATH}/.runtime/pgdata:/var/lib/postgresql/data
    ports:
      - "${postgres_port}:5432"
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      interval: 5s
      timeout: 10s
      retries: 10

  pgadmin:
    image: "dpage/pgadmin4:latest"
    environment:
      PGADMIN_DEFAULT_EMAIL: "info@sunnyday.software"
      PGADMIN_DEFAULT_PASSWORD: "password123"
    volumes:
      - ${HOST_PROJECT_PATH}/.runtime/pgadmin:/var/lib/pgadmin
      - ${HOST_PROJECT_PATH}/dev/docker/pgadmin/data/servers.json:/pgadmin4/servers.json
      - ${HOST_PROJECT_PATH}/dev/docker/pgadmin/data/pgpassfile:/pgpassfile
    ports:
      - "${pgadmin_port}:80"
    depends_on:
      - postgres

  s3:
    image: "bitnami/minio:latest"
    environment:
      - MINIO_DATA_DIR=/minio/path
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=password123
    volumes:
      - ${HOST_PROJECT_PATH}/.runtime/minio:/minio/path
    ports:
      - "${s3_port}:9000"
      - "9001:9001"

  smtp:
    image: maildev/maildev:2.1.0
    environment:
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=25
    ports:
      - "${smtp_port}:1080"
      - "25:25"

  cube:
    image: cubejs/cube:latest
    ports:
      - 4000:4000
      - 15432:15432
    environment:
      - CUBEJS_DEV_MODE=true
    volumes:
      - ${HOST_PROJECT_PATH}/.runtime/cube/conf:/cube/conf

