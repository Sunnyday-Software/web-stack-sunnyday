name: Build Rust Binaries

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build and Upload Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Dependencies on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install Dependencies on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pkg-config openssl

      - name: Build Project
        working-directory: dev/project
        run: cargo build --release

      - name: Archive Binaries on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p artifacts
          cp target/release/nome_del_tuo_programma artifacts/
          tar -czvf artifacts/linux-binary.tar.gz -C artifacts nome_del_tuo_programma

      - name: Archive Binaries on macOS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p artifacts
          cp target/release/nome_del_tuo_programma artifacts/
          tar -czvf artifacts/macos-binary.tar.gz -C artifacts nome_del_tuo_programma

      - name: Archive Binaries on Windows
        if: matrix.os == 'windows-latest'
        run: |
          mkdir artifacts
          copy target\release\nome_del_tuo_programma.exe artifacts\
          powershell Compress-Archive -Path artifacts\nome_del_tuo_programma.exe -DestinationPath artifacts\windows-binary.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-binary
          path: |
            dev/project/artifacts/linux-binary.tar.gz
            dev/project/artifacts/macos-binary.tar.gz
            dev/project/artifacts/windows-binary.zip
          if-no-files-found: error
